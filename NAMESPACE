# Generated by roxygen2: do not edit by hand

S3method("[",pmm)
S3method("colnames<-",default)
S3method("colnames<-",pmm)
S3method(as.matrix,pmm)
S3method(as_flowFrame,character)
S3method(as_flowFrame,data.frame)
S3method(as_flowFrame,default)
S3method(as_flowFrame,matrix)
S3method(print,pmm)
S3method(search,default)
S3method(search,pmm)
S3method(summary,pmm)
export("colnames<-")
export(any_noncommon_descs)
export(as_flowFrame)
export(baseline_cut)
export(bead_normalize)
export(bead_normalize_single)
export(bisect)
export(compensate)
export(count_events)
export(do_differential_expression)
export(export_cluster_summary)
export(export_id_map)
export(find_cell_ontologies)
export(find_plus_minus_by_channel)
export(flowpipe_params)
export(gate)
export(get_channels_by_sample)
export(get_expression_subset)
export(get_fcs_expression_subset)
export(get_optimal_cluster_count)
export(makeContrasts)
export(make_clusters)
export(make_external_latex_document)
export(make_metaclusters)
export(make_sample_id_map)
export(make_tsne_embedding)
export(make_umap_embedding)
export(memoise_all_package_functions)
export(merge_clusters)
export(multisect)
export(plot_cell_counts)
export(plot_channel_densities_by_sample)
export(plot_common_umap_viz)
export(plot_differential_abundance)
export(plot_heatmaps)
export(plot_xshift_network)
export(prepare_augmented_fcs_data)
export(print_ontologies)
export(process_config_file)
export(quadrisect)
export(rename_duplicates)
export(rename_fcs_parameters_name)
export(rename_fcs_parameters_name_desc)
export(reorder_fcs_common_columns)
export(rev_asinh)
export(search)
export(search_orig.pmm)
export(simple_FlowSOM)
export(split_pmm_by_cluster)
export(summarize_all_clusters)
export(summarize_all_clusters_latex)
export(summarize_metadata)
export(test_contrasts)
export(trisect)
export(visualize_channels)
importFrom(keystone,"%_%")
importFrom(keystone,"%nin%")
importFrom(keystone,cordon)
importFrom(keystone,dataframe)
importFrom(keystone,is_invalid)
importFrom(keystone,nop)
importFrom(magrittr,"%>%")
importFrom(tribe,"%<@>%")
importFrom(tribe,"%@>%")
